{"ast":null,"code":"var _jsxFileName = \"/Users/agarci/Desktop/IronHack/2020-04-15-Conways-Game-of-Life/app/src/App.jsx\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport produce from \"immer\";\nimport \"./App.css\";\n\nconst generateGrid = (numRows, numCols) => {\n  const rows = [];\n\n  for (let i = 0; i < numRows; i++) {\n    rows.push(Array.from(Array(Number(numCols)), () => 0));\n  }\n\n  return rows;\n};\n\nfunction App() {\n  const [numberRow, setNumberRow] = useState(Number);\n  const [numberCol, setNumberCol] = useState(Number);\n  const [found, setFound] = useState(false);\n  const [grid, setGrid] = useState([]);\n\n  const handleChange = ({\n    target: {\n      id,\n      value\n    }\n  }) => id === \"col\" ? setNumberCol(value) : setNumberRow(value);\n\n  useEffect(() => setGrid(() => generateGrid(numberRow, numberCol)), [numberRow, numberCol]);\n  const runningRef = useRef();\n  const runSimulation = useCallback(() => {\n    if (!found) {\n      return;\n    }\n\n    setTimeout(runSimulation, 1000);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"GAME THE LIVE\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"row\",\n    value: numberRow,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"col\",\n    value: numberCol,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      gridTemplateColumns: `repeat(${numberCol}, 20px)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, grid.map((rows, i) => rows.map((col, k) => /*#__PURE__*/React.createElement(\"div\", {\n    className: col ? \"active\" : \"inactive\",\n    key: `${i}-${k}`,\n    onClick: () => {\n      const newGrid = produce(grid, gridCopy => {\n        gridCopy[i][k] = grid[i][k] ? 0 : 1;\n      });\n      setGrid(newGrid);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setFound(!found),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, found ? \"STOP\" : \"START\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/agarci/Desktop/IronHack/2020-04-15-Conways-Game-of-Life/app/src/App.jsx"],"names":["React","useState","useEffect","useCallback","useRef","produce","generateGrid","numRows","numCols","rows","i","push","Array","from","Number","App","numberRow","setNumberRow","numberCol","setNumberCol","found","setFound","grid","setGrid","handleChange","target","id","value","runningRef","runSimulation","setTimeout","gridTemplateColumns","map","col","k","newGrid","gridCopy"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport produce from \"immer\";\nimport \"./App.css\";\n\nconst generateGrid = (numRows, numCols) => {\n  const rows = [];\n  for (let i = 0; i < numRows; i++) {\n    rows.push(Array.from(Array(Number(numCols)), () => 0));\n  }\n  return rows;\n};\n\nfunction App() {\n  const [numberRow, setNumberRow] = useState(Number)\n  const [numberCol, setNumberCol] = useState(Number)\n\n  const [found, setFound] = useState(false)\n  const [grid, setGrid] = useState([]);\n\nconst handleChange = ({target: {id, value}}) => id === \"col\" ? setNumberCol(value) : setNumberRow(value)\n\nuseEffect(() => setGrid(() => generateGrid(numberRow, numberCol)), [numberRow, numberCol])\n\nconst runningRef = useRef()\n \nconst runSimulation = useCallback(() => {\n  if (!found) {return} \n  setTimeout(runSimulation, 1000)\n}, [])\n\n  return (\n    <>\n    <h1>GAME THE LIVE</h1>\n      <input id=\"row\" value={numberRow} onChange={handleChange} />\n      <input id=\"col\" value={numberCol} onChange={handleChange} />\n      <div className=\"App\" style={{gridTemplateColumns: `repeat(${numberCol}, 20px)`\n      }}>\n        {grid.map((rows, i) =>\n          rows.map((col, k) => (\n            <div\n            className={col ? \"active\":\"inactive\"}\n              key={`${i}-${k}`}\n              onClick={() => {\n                const newGrid = produce(grid, gridCopy => {\n                  gridCopy[i][k] = grid[i][k] ? 0 : 1;\n                });\n                setGrid(newGrid);\n              }}/>)))}\n              </div>\n      <button onClick={() => setFound(!found)}>{found ? \"STOP\":\"START\"}</button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}