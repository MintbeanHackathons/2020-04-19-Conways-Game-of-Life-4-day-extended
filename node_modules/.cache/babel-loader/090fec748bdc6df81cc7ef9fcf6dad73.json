{"ast":null,"code":"var _jsxFileName = \"/Users/agarci/Desktop/IronHack/2020-04-15-Conways-Game-of-Life/app/src/App.jsx\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport produce from \"immer\";\nimport \"./App.css\";\nconst numRows = 40;\nconst numCols = 90;\nconst operations = [[0, 1], [0, -1], [1, -1], [-1, 1], [1, 1], [-1, -1], [1, 0], [-1, 0]];\n\nfunction App() {\n  const [running, setRunning] = useState(false);\n  const [grid, setGrid] = useState(generate());\n  const runningRef = useRef();\n  runningRef.current = running;\n  const runSimulation = useCallback(() => {\n    if (!runningRef.current) {\n      return;\n    }\n\n    setGrid(g => {\n      return produce(g, gridCopy => {\n        for (let i = 0; i < numRows; i++) {\n          for (let k = 0; k < numCols; k++) {\n            let neighbors = 0;\n            operations.forEach(([x, y]) => {\n              const newI = i + x;\n              const newK = k + y;\n\n              if (newI >= 0 && newI < numRows && newK >= 0 && newK < numCols) {\n                neighbors += g[newI][newK];\n              }\n            });\n\n            if (neighbors < 2 || neighbors > 3) {\n              gridCopy[i][k] = 0;\n            } else if (g[i][k] === 0 && neighbors === 3) {\n              gridCopy[i][k] = 1;\n            }\n          }\n        }\n      });\n    });\n    setTimeout(runSimulation, 100);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"GAME THE LIVE\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      const rows = [];\n\n      for (let i = 0; i < numRows; i++) {\n        rows.push(Array.from(Array(numCols), () => 0));\n      }\n\n      setGrid(rows);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      gridTemplateColumns: `repeat(${numCols}, 20px)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, grid.map((rows, i) => rows.map((col, k) => /*#__PURE__*/React.createElement(\"div\", {\n    className: col ? \"active\" : \"inactive\",\n    key: `${i}-${k}`,\n    onClick: () => {\n      const newGrid = produce(grid, gridCopy => {\n        gridCopy[i][k] = grid[i][k] ? 0 : 1;\n      });\n      setGrid(newGrid);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setRunning(!running);\n\n      if (!running) {\n        runningRef.current = true;\n        runSimulation();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, running ? \"STOP\" : \"START\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/agarci/Desktop/IronHack/2020-04-15-Conways-Game-of-Life/app/src/App.jsx"],"names":["React","useState","useEffect","useCallback","useRef","produce","numRows","numCols","operations","App","running","setRunning","grid","setGrid","generate","runningRef","current","runSimulation","g","gridCopy","i","k","neighbors","forEach","x","y","newI","newK","setTimeout","rows","push","Array","from","gridTemplateColumns","map","col","newGrid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport produce from \"immer\";\nimport \"./App.css\";\n\nconst numRows = 40;\nconst numCols = 90;\n\nconst operations = [\n  [0, 1],\n  [0, -1],\n  [1, -1],\n  [-1, 1],\n  [1, 1],\n  [-1, -1],\n  [1, 0],\n  [-1, 0]\n];\n\nfunction App() {\n\n  const [running, setRunning] = useState(false);\n  const [grid, setGrid] = useState(generate());\n\n  const runningRef = useRef();\n  runningRef.current = running;\n\n  const runSimulation = useCallback(() => {\n    if (!runningRef.current) {\n      return;\n    }\n\n    setGrid(g => {\n      return produce(g, gridCopy => {\n        for (let i = 0; i < numRows; i++) {\n          for (let k = 0; k < numCols; k++) {\n            let neighbors = 0;\n            operations.forEach(([x, y]) => {\n              const newI = i + x;\n              const newK = k + y;\n              if (newI >= 0 && newI < numRows && newK >= 0 && newK < numCols) {\n                neighbors += g[newI][newK];\n              }\n            });\n\n            if (neighbors < 2 || neighbors > 3) {\n              gridCopy[i][k] = 0;\n            } else if (g[i][k] === 0 && neighbors === 3) {\n              gridCopy[i][k] = 1;\n            }\n          }\n        }\n      });\n    });\n\n    setTimeout(runSimulation, 100);\n  }, []);\n\n  return (\n    <>\n      <h1>GAME THE LIVE</h1>\n      <button\n        onClick={() => {\n          const rows = [];\n          for (let i = 0; i < numRows; i++) {\n            rows.push(\n              Array.from(Array(numCols), () =>  0)\n            );\n          }\n\n          setGrid(rows);\n        }}\n      >\n        Create\n      </button>\n      <div\n        className=\"App\"\n        style={{ gridTemplateColumns: `repeat(${numCols}, 20px)` }}\n      >\n        {grid.map((rows, i) =>\n          rows.map((col, k) => (\n            <div\n              className={col ? \"active\" : \"inactive\"}\n              key={`${i}-${k}`}\n              onClick={() => {\n                const newGrid = produce(grid, gridCopy => {\n                  gridCopy[i][k] = grid[i][k] ? 0 : 1;\n                });\n                setGrid(newGrid);\n              }}\n            />\n          ))\n        )}\n      </div>\n      <button onClick={() => {\n        setRunning(!running)\n        if (!running) {\n          runningRef.current = true;\n          runSimulation();\n        }\n      }}>\n        {running ? \"STOP\" : \"START\"}\n      </button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}