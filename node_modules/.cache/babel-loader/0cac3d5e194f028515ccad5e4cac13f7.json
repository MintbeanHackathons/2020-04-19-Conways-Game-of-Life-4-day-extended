{"ast":null,"code":"var _jsxFileName = \"/Users/agarci/Desktop/IronHack/2020-04-15-Conways-Game-of-Life/app/src/App.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst generateGrid = (numRows, numCol) => {\n  const rows = [];\n\n  for (let i = 0; i < numRows; i++) {\n    rows.push(Array.from(Array(numCols), () => 0));\n  }\n\n  return rows;\n};\n\nfunction App() {\n  const [found, setFound] = useState(false);\n  const [numberRow, setNumberRow] = useState(Number);\n  const [numberCol, setNumberCol] = useState(Number);\n  const [grid, setGrid] = useState([]);\n\n  const handleChange = ({\n    target: {\n      id,\n      value\n    }\n  }) => id === \"col\" ? setNumberCol(value) : setNumberRow(value);\n\n  useEffect(() => setGrid(generateGrid(numberRow, numberCol)), [numberRow, numberCol]); // const activeCeils = idx => {\n  //     const newGrid = [...grid];\n  //     newGrid[idx] = !grid[idx];\n  //     setGrid(newGrid);\n  //   };\n  //   const heart = () => console.log(\"RUN!\")\n  //   found && setInterval(() => {\n  //         heart()\n  //       }, 1000);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, \"GAME THE LIVE\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"row\",\n    value: numberRow,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"col\",\n    value: numberCol,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, grid.map((elm, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    className: grid[idx] ? \"active\" : \"inactive\",\n    key: idx // onClick={() => activeCeils(idx)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setFound(!found),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, found ? \"STOP\" : \"START\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/agarci/Desktop/IronHack/2020-04-15-Conways-Game-of-Life/app/src/App.jsx"],"names":["React","useState","useEffect","generateGrid","numRows","numCol","rows","i","push","Array","from","numCols","App","found","setFound","numberRow","setNumberRow","Number","numberCol","setNumberCol","grid","setGrid","handleChange","target","id","value","map","elm","idx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAEA,MAAMC,YAAY,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACxC,QAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAApB,EAA6BG,CAAC,EAA9B,EAAkC;AAChCD,IAAAA,IAAI,CAACE,IAAL,CAAUC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACE,OAAD,CAAhB,EAA2B,MAAM,CAAjC,CAAV;AACD;;AAED,SAAOL,IAAP;AACD,CAPD;;AASA,SAASM,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAACgB,MAAD,CAA1C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAACgB,MAAD,CAA1C;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;;AAEF,QAAMqB,YAAY,GAAG,CAAC;AAACC,IAAAA,MAAM,EAAE;AAACC,MAAAA,EAAD;AAAKC,MAAAA;AAAL;AAAT,GAAD,KAA2BD,EAAE,KAAK,KAAP,GAAeL,YAAY,CAACM,KAAD,CAA3B,GAAqCT,YAAY,CAACS,KAAD,CAAjG;;AAEAvB,EAAAA,SAAS,CAAC,MAAMmB,OAAO,CAAClB,YAAY,CAACY,SAAD,EAAYG,SAAZ,CAAb,CAAd,EAAoD,CAACH,SAAD,EAAYG,SAAZ,CAApD,CAAT,CARe,CAWf;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAGE,sBACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,eAEE;AAAO,IAAA,EAAE,EAAC,KAAV;AAAgB,IAAA,KAAK,EAAEH,SAAvB;AAAkC,IAAA,QAAQ,EAAEO,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,EAAE,EAAC,KAAV;AAAgB,IAAA,KAAK,EAAEJ,SAAvB;AAAkC,IAAA,QAAQ,EAAEI,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACM,GAAL,CAAS,CAACC,GAAD,EAAMC,GAAN,kBACR;AACE,IAAA,SAAS,EAAER,IAAI,CAACQ,GAAD,CAAJ,GAAY,QAAZ,GAAuB,UADpC;AAEE,IAAA,GAAG,EAAEA,GAFP,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAJA,eAaE;AAAQ,IAAA,OAAO,EAAE,MAAMd,QAAQ,CAAC,CAACD,KAAF,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,KAAK,GAAG,MAAH,GAAU,OAAzD,CAbF,CADF;AAiBD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst generateGrid = (numRows, numCol) => {\n  const rows = [];\n  for (let i = 0; i < numRows; i++) {\n    rows.push(Array.from(Array(numCols), () => 0));\n  }\n\n  return rows;\n};\n\nfunction App() {\n  const [found, setFound] = useState(false)\n  const [numberRow, setNumberRow] = useState(Number)\n  const [numberCol, setNumberCol] = useState(Number)\n  const [grid, setGrid] = useState([]);\n\nconst handleChange = ({target: {id, value}}) => id === \"col\" ? setNumberCol(value) : setNumberRow(value)\n\nuseEffect(() => setGrid(generateGrid(numberRow, numberCol)), [numberRow, numberCol])\n\n \n// const activeCeils = idx => {\n//     const newGrid = [...grid];\n//     newGrid[idx] = !grid[idx];\n//     setGrid(newGrid);\n//   };\n  \n//   const heart = () => console.log(\"RUN!\")\n\n//   found && setInterval(() => {\n//         heart()\n//       }, 1000);\n\n\n  return (\n    <>\n    <h1>GAME THE LIVE</h1>\n      <input id=\"row\" value={numberRow} onChange={handleChange} />\n      <input id=\"col\" value={numberCol} onChange={handleChange} />\n    <div className=\"App\">\n      {grid.map((elm, idx) => (\n        <div\n          className={grid[idx] ? \"active\" : \"inactive\"}\n          key={idx}\n          // onClick={() => activeCeils(idx)}\n        />\n      ))}\n    </div>\n      <button onClick={() => setFound(!found)}>{found ? \"STOP\":\"START\"}</button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}