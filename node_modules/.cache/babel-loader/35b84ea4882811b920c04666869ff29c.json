{"ast":null,"code":"var _jsxFileName = \"/Users/agarci/Desktop/IronHack/2020-04-15-Conways-Game-of-Life/app/src/App.jsx\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport produce from \"immer\";\nimport \"./App.css\";\n\nconst generateGrid = (numRows, numCols) => {\n  const rows = [];\n\n  for (let i = 0; i < numRows; i++) {\n    rows.push(Array.from(Array(Number(numCols)), () => 0));\n  }\n\n  return rows;\n};\n\nfunction App() {\n  const [numberRow, setNumberRow] = useState(Number);\n  const [numberCol, setNumberCol] = useState(Number);\n  const [found, setFound] = useState(false);\n  const [grid, setGrid] = useState([]);\n\n  const handleChange = ({\n    target: {\n      id,\n      value\n    }\n  }) => id === \"col\" ? setNumberCol(value) : setNumberRow(value);\n\n  useEffect(() => setGrid(() => generateGrid(numberRow, numberCol)), [numberRow, numberCol]);\n  const foundRef = useRef();\n  foundRef.current = found;\n  const runSimulation = useCallback(() => {\n    if (!foundRef.current) {\n      return;\n    }\n\n    setGrid(value => produce(value, gridCopy => {\n      for (let i = 0; i < numberRow; i++) {\n        for (let k = 0; k < numberCol; k++) {\n          let neighbors = 0;\n          operations.forEach(([x, y]) => {\n            const newI = i + x;\n            const newK = k + y;\n\n            if (newI >= 0 && newI < numberRow && newK >= 0 && newK < numberCol) {\n              neighbors += g[newI][newK];\n            }\n          });\n        }\n      }\n    }));\n    setTimeout(runSimulation, 1000);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"GAME THE LIVE\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"row\",\n    value: numberRow,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"col\",\n    value: numberCol,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      gridTemplateColumns: `repeat(${numberCol}, 20px)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, grid.map((rows, i) => rows.map((col, k) => /*#__PURE__*/React.createElement(\"div\", {\n    className: col ? \"active\" : \"inactive\",\n    key: `${i}-${k}`,\n    onClick: () => {\n      const newGrid = produce(grid, gridCopy => {\n        gridCopy[i][k] = grid[i][k] ? 0 : 1;\n      });\n      setGrid(newGrid);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setFound(!found),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, found ? \"STOP\" : \"START\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/agarci/Desktop/IronHack/2020-04-15-Conways-Game-of-Life/app/src/App.jsx"],"names":["React","useState","useEffect","useCallback","useRef","produce","generateGrid","numRows","numCols","rows","i","push","Array","from","Number","App","numberRow","setNumberRow","numberCol","setNumberCol","found","setFound","grid","setGrid","handleChange","target","id","value","foundRef","current","runSimulation","gridCopy","k","neighbors","operations","forEach","x","y","newI","newK","g","setTimeout","gridTemplateColumns","map","col","newGrid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport produce from \"immer\";\nimport \"./App.css\";\n\nconst generateGrid = (numRows, numCols) => {\n  const rows = [];\n  for (let i = 0; i < numRows; i++) {\n    rows.push(Array.from(Array(Number(numCols)), () => 0));\n  }\n  return rows;\n};\n\nfunction App() {\n  const [numberRow, setNumberRow] = useState(Number);\n  const [numberCol, setNumberCol] = useState(Number);\n\n  const [found, setFound] = useState(false);\n  const [grid, setGrid] = useState([]);\n\n  const handleChange = ({ target: { id, value } }) =>\n    id === \"col\" ? setNumberCol(value) : setNumberRow(value);\n\n  useEffect(() => setGrid(() => generateGrid(numberRow, numberCol)), [\n    numberRow,\n    numberCol\n  ]);\n\n  const foundRef = useRef();\n  foundRef.current = found;\n\n  const runSimulation = useCallback(() => {\n    if (!foundRef.current) {\n      return;\n    }\n    setGrid(value =>\n      produce(value, gridCopy => {\n        for (let i = 0; i < numberRow; i++) {\n          for (let k = 0; k < numberCol; k++) {\n            let neighbors = 0\n            operations.forEach(([x, y]) => {\n              const newI = i + x\n              const newK = k + y\n              if (newI >= 0 && newI < numberRow && newK >= 0 && newK < numberCol) {\n                neighbors += g[newI][newK]\n              }\n            })\n          }\n        }\n      })\n    );\n    setTimeout(runSimulation, 1000);\n  }, []);\n\n  return (\n    <>\n      <h1>GAME THE LIVE</h1>\n      <input id=\"row\" value={numberRow} onChange={handleChange} />\n      <input id=\"col\" value={numberCol} onChange={handleChange} />\n      <div\n        className=\"App\"\n        style={{ gridTemplateColumns: `repeat(${numberCol}, 20px)` }}\n      >\n        {grid.map((rows, i) =>\n          rows.map((col, k) => (\n            <div\n              className={col ? \"active\" : \"inactive\"}\n              key={`${i}-${k}`}\n              onClick={() => {\n                const newGrid = produce(grid, gridCopy => {\n                  gridCopy[i][k] = grid[i][k] ? 0 : 1;\n                });\n                setGrid(newGrid);\n              }}\n            />\n          ))\n        )}\n      </div>\n      <button onClick={() => setFound(!found)}>\n        {found ? \"STOP\" : \"START\"}\n      </button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}