{"ast":null,"code":"var _jsxFileName = \"/Users/agarci/Desktop/IronHack/2020-04-15-Conways-Game-of-Life/app/src/App.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst generateGrid = (numRow, numCol) => {\n  const row = [];\n  let i = 0;\n\n  while (i < numRow) {\n    row.push(Array.from(Array(numCol), () => 0));\n    i++;\n  }\n\n  return row;\n};\n\nfunction App() {\n  const [found, setFound] = useState(false);\n  const [numberRow, setNumberRow] = useState(0);\n  const [numberCol, setNumberCol] = useState(0);\n  const [grid, setGrid] = useState([]);\n\n  const handleChange = ({\n    target: {\n      id,\n      value\n    }\n  }) => id === \"col\" ? setNumberCol(value) : setNumberRow(value);\n\n  useEffect(() => setGrid(generateGrid(numberRow, numberCol)));\n\n  const activeCeils = idx => {\n    const newGrid = [...grid];\n    newGrid[idx] = !grid[idx];\n    setGrid(newGrid);\n  };\n\n  const heart = () => console.log(\"RUN!\");\n\n  found && setInterval(() => {\n    heart();\n  }, 1000);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \"GAME THE LIVE\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"row\",\n    value: numberRow,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"col\",\n    value: numberCol,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, grid.map((elm, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    className: grid[idx] ? \"active\" : \"inactive\",\n    key: idx,\n    onClick: () => activeCeils(idx),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setFound(!found),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, found ? \"STOP\" : \"START\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/agarci/Desktop/IronHack/2020-04-15-Conways-Game-of-Life/app/src/App.jsx"],"names":["React","useState","useEffect","generateGrid","numRow","numCol","row","i","push","Array","from","App","found","setFound","numberRow","setNumberRow","numberCol","setNumberCol","grid","setGrid","handleChange","target","id","value","activeCeils","idx","newGrid","heart","console","log","setInterval","map","elm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAEA,MAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AACvC,QAAMC,GAAG,GAAG,EAAZ;AACA,MAAIC,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAGH,MAAX,EAAmB;AACjBE,IAAAA,GAAG,CAACE,IAAJ,CAASC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACJ,MAAD,CAAhB,EAA0B,MAAM,CAAhC,CAAT;AACAE,IAAAA,CAAC;AACF;;AACD,SAAOD,GAAP;AACD,CARD;;AAUA,SAASK,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;;AAEF,QAAMmB,YAAY,GAAG,CAAC;AAACC,IAAAA,MAAM,EAAE;AAACC,MAAAA,EAAD;AAAKC,MAAAA;AAAL;AAAT,GAAD,KAA2BD,EAAE,KAAK,KAAP,GAAeL,YAAY,CAACM,KAAD,CAA3B,GAAqCR,YAAY,CAACQ,KAAD,CAAjG;;AACArB,EAAAA,SAAS,CAAC,MAAMiB,OAAO,CAAChB,YAAY,CAACW,SAAD,EAAYE,SAAZ,CAAb,CAAd,CAAT;;AAEA,QAAMQ,WAAW,GAAGC,GAAG,IAAI;AACvB,UAAMC,OAAO,GAAG,CAAC,GAAGR,IAAJ,CAAhB;AACAQ,IAAAA,OAAO,CAACD,GAAD,CAAP,GAAe,CAACP,IAAI,CAACO,GAAD,CAApB;AACAN,IAAAA,OAAO,CAACO,OAAD,CAAP;AACD,GAJH;;AAME,QAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAApB;;AAEAjB,EAAAA,KAAK,IAAIkB,WAAW,CAAC,MAAM;AACrBH,IAAAA,KAAK;AACN,GAFe,EAEb,IAFa,CAApB;AAKA,sBACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,eAEE;AAAO,IAAA,EAAE,EAAC,KAAV;AAAgB,IAAA,KAAK,EAAEb,SAAvB;AAAkC,IAAA,QAAQ,EAAEM,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,EAAE,EAAC,KAAV;AAAgB,IAAA,KAAK,EAAEJ,SAAvB;AAAkC,IAAA,QAAQ,EAAEI,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACa,GAAL,CAAS,CAACC,GAAD,EAAMP,GAAN,kBACR;AACE,IAAA,SAAS,EAAEP,IAAI,CAACO,GAAD,CAAJ,GAAY,QAAZ,GAAuB,UADpC;AAEE,IAAA,GAAG,EAAEA,GAFP;AAGE,IAAA,OAAO,EAAE,MAAMD,WAAW,CAACC,GAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAJA,eAaE;AAAQ,IAAA,OAAO,EAAE,MAAMZ,QAAQ,CAAC,CAACD,KAAF,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,KAAK,GAAG,MAAH,GAAU,OAAzD,CAbF,CADF;AAiBD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst generateGrid = (numRow, numCol) => {\n  const row = [];\n  let i = 0;\n  while (i < numRow) {\n    row.push(Array.from(Array(numCol), () => 0));\n    i++;\n  }\n  return row;\n};\n\nfunction App() {\n  const [found, setFound] = useState(false)\n  const [numberRow, setNumberRow] = useState(0)\n  const [numberCol, setNumberCol] = useState(0)\n  const [grid, setGrid] = useState([]);\n\nconst handleChange = ({target: {id, value}}) => id === \"col\" ? setNumberCol(value) : setNumberRow(value)\nuseEffect(() => setGrid(generateGrid(numberRow, numberCol)), )\n \nconst activeCeils = idx => {\n    const newGrid = [...grid];\n    newGrid[idx] = !grid[idx];\n    setGrid(newGrid);\n  };\n  \n  const heart = () => console.log(\"RUN!\")\n\n  found && setInterval(() => {\n        heart()\n      }, 1000);\n\n\n  return (\n    <>\n    <h1>GAME THE LIVE</h1>\n      <input id=\"row\" value={numberRow} onChange={handleChange}/>\n      <input id=\"col\" value={numberCol} onChange={handleChange} />\n    <div className=\"App\">\n      {grid.map((elm, idx) => (\n        <div\n          className={grid[idx] ? \"active\" : \"inactive\"}\n          key={idx}\n          onClick={() => activeCeils(idx)}\n        />\n      ))}\n    </div>\n      <button onClick={() => setFound(!found)}>{found ? \"STOP\":\"START\"}</button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}