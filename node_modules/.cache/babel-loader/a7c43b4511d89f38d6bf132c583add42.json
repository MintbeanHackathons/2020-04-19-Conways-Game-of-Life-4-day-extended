{"ast":null,"code":"var _jsxFileName = \"/Users/agarci/Desktop/IronHack/2020-04-15-Conways-Game-of-Life/app/src/App.jsx\";\nimport React, { useState, useCallback, useRef } from \"react\";\nimport produce from \"immer\";\nimport \"./App.css\";\nconst numRows = 40;\nconst numCols = 90;\nconst operations = [[0, 1], [0, -1], [1, -1], [-1, 1], [1, 1], [-1, -1], [1, 0], [-1, 0]];\n\nconst generate = () => {\n  const rows = [];\n\n  for (let i = 0; i < numRows; i++) {\n    rows.push(Array.from(Array(numCols), () => 0));\n  }\n\n  return rows;\n};\n\nfunction App() {\n  const [running, setRunning] = useState(false);\n  const [grid, setGrid] = useState(generate());\n  const runningRef = useRef();\n  runningRef.current = running;\n  const runSimulation = useCallback(() => {\n    if (!runningRef.current) {\n      return;\n    }\n\n    setGrid(value => produce(value, gridCopy => {\n      for (let i = 0; i < numRows; i++) {\n        for (let k = 0; k < numCols; k++) {\n          let neighbors = 0;\n          operations.forEach(([x, y]) => {\n            const newI = i + x;\n            const newK = k + y;\n            newI >= 0 && newI < numRows && newK >= 0 && newK < numCols && (neighbors += value[newI][newK]);\n          });\n          neighbors < 2 || neighbors > 3 && (gridCopy[i][k] = 0);\n          value[i][k] === 0 && neighbors === 3 && (gridCopy[i][k] = 1);\n        }\n      }\n    }));\n    setTimeout(runSimulation, 200);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"GAME OF LIFE\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: () => {\n      setRunning(!running);\n\n      if (!running) {\n        runningRef.current = true;\n        runSimulation();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, running ? \"STOP\" : \"START\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, grid.map((rows, i) => rows.map((col, k) => /*#__PURE__*/React.createElement(\"div\", {\n    className: col ? \"active\" : \"inactive\",\n    key: `${i}-${k}`,\n    onClick: () => {\n      const newGrid = produce(grid, gridCopy => {\n        gridCopy[i][k] = grid[i][k] ? 0 : 1;\n      });\n      setGrid(newGrid);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/agarci/Desktop/IronHack/2020-04-15-Conways-Game-of-Life/app/src/App.jsx"],"names":["React","useState","useCallback","useRef","produce","numRows","numCols","operations","generate","rows","i","push","Array","from","App","running","setRunning","grid","setGrid","runningRef","current","runSimulation","value","gridCopy","k","neighbors","forEach","x","y","newI","newK","setTimeout","map","col","newGrid"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef } from \"react\";\nimport produce from \"immer\";\n\nimport \"./App.css\";\n\nconst numRows = 40;\nconst numCols = 90;\n\nconst operations = [\n  [0, 1],\n  [0, -1],\n  [1, -1],\n  [-1, 1],\n  [1, 1],\n  [-1, -1],\n  [1, 0],\n  [-1, 0]\n];\n\nconst generate = () => {\n  const rows = [];\n  for (let i = 0; i < numRows; i++) {\n    rows.push(Array.from(Array(numCols), () => 0));\n  }\n\n  return rows;\n};\n\nfunction App() {\n  const [running, setRunning] = useState(false);\n  const [grid, setGrid] = useState(generate());\n\n  const runningRef = useRef();\n  runningRef.current = running;\n\n  const runSimulation = useCallback(() => {\n    if (!runningRef.current) {\n      return;\n    }\n\n    setGrid(value =>\n      produce(value, gridCopy => {\n        for (let i = 0; i < numRows; i++) {\n          for (let k = 0; k < numCols; k++) {\n            let neighbors = 0;\n            operations.forEach(([x, y]) => {\n              const newI = i + x;\n              const newK = k + y;\n              newI >= 0 &&\n                newI < numRows &&\n                newK >= 0 &&\n                newK < numCols &&\n                (neighbors += value[newI][newK]);\n            });\n\n            neighbors < 2 || neighbors > 3 && (gridCopy[i][k] = 0)\n            value[i][k] === 0 && neighbors === 3 && (gridCopy[i][k] = 1)\n          }\n        }\n      })\n    );\n\n    setTimeout(runSimulation, 200);\n  }, []);\n\n  return (\n    <>\n      <div className=\"header\">\n        <h1 className=\"title\">GAME OF LIFE</h1>\n        <button\n          className=\"button\"\n          onClick={() => {\n            setRunning(!running);\n            if (!running) {\n              runningRef.current = true;\n              runSimulation();\n            }\n          }}\n        >\n          {running ? \"STOP\" : \"START\"}\n        </button>\n      </div>\n\n      <div className=\"App\">\n        {grid.map((rows, i) =>\n          rows.map((col, k) => (\n            <div\n              className={col ? \"active\" : \"inactive\"}\n              key={`${i}-${k}`}\n              onClick={() => {\n                const newGrid = produce(grid, gridCopy => {\n                  gridCopy[i][k] = grid[i][k] ? 0 : 1;\n                });\n                setGrid(newGrid);\n              }}\n            />\n          ))\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}